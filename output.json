{
    "data": {
        "repository": {
            "discussions": {
                "nodes": [
                    {
                        "answer": {
                            "body": "> So, can anyone comment if it run completely locally/off-line in our own node.js app (like say a self-authored, internal-use-only VS Code extension)?\r\n\r\nI guess it does work offline. I'm using this VS Code extenstion, [Markdown Preview Mermaid Support](https://marketplace.visualstudio.com/items?itemName=bierner.markdown-mermaid), to preview locally without the internet. So I guess it will run locally, even if executed from source code or as a package.\r\n",
                            "publishedAt": "2023-05-21T06:18:27Z",
                            "reactions": {
                                "totalCount": 0
                            }
                        },
                        "body": "Title sort of says it all.  Wondering if mermaid.js can run completely locally, or if it has to do anything online (e.g. phoning home, etc.) If so, that's a deal-breaker for our use-case which would be an absolute shame, because I absolutely fell in love with it when I came across it's integration in Typora.  Just can't risk information unexpectedly leaking out.\r\n\r\nSo, can anyone comment if it run completely locally/off-line in our own node.js app (like say a self-authored, internal-use-only VS Code extension)? \r\n\r\nGranted, we'll probably 'vet' the code anyway, but hoping someone can short-circuit that task, saving us the effort if they already know it does use any sort of connectivity.",
                        "title": "Does mermaid-js run completely locally/offline?",
                        "url": "https://github.com/orgs/mermaid-js/discussions/4412"
                    },
                    {
                        "answer": {
                            "body": "(`&`) should not have layout attributes.\r\nhttps://mermaid.js.org/syntax/flowchart.html#chaining-of-links\r\n\r\nit only shorthand for declare multiple.\r\nhttps://github.com/mermaid-js/mermaid/blob/develop/packages/mermaid/src/diagrams/flowchart/parser/flow.jison#L374",
                            "publishedAt": "2023-05-11T01:03:23Z",
                            "reactions": {
                                "totalCount": 0
                            }
                        },
                        "body": "I saw the and symbol (`&`) used in a Mermaid.js diagram here:\r\n\r\nhttps://github.com/ProjectOpenSea/seaport/blob/92841bcce9e1e49563f64585934f8040380ef1d2/README.md#diagram\r\n\r\nBut I'm not quite sure what its purpose is:\r\n\r\n1. Does it horizontally align the nodes (this is what the ChatGPT said, though I'm skeptical this is the case)?\r\n2. Is it a no-op syntax whose sole purpose is to improve the user experience by grouping similar nodes?",
                        "title": "What does the and symbol (`&`) do?",
                        "url": "https://github.com/orgs/mermaid-js/discussions/4385"
                    },
                    {
                        "answer": {
                            "body": "Bulk of the size is coming from 2 newly added diagrams. Flowchart-elk & mindmap.\r\nThey use 2 separate layout engines, Elk & cytoscape, which adds to the size. \r\n \r\n<img width=\"777\" alt=\"image\" src=\"https://user-images.githubusercontent.com/10703445/233833547-196a01d4-c372-4e1d-91d9-69083976a2b0.png\">\r\n",
                            "publishedAt": "2023-04-23T10:11:02Z",
                            "reactions": {
                                "totalCount": 1
                            }
                        },
                        "body": "In the release notes of v9.3.0, it was noted that one of the significant changes was \"25% Smaller\" bundle size. However, immediately after that in v9.4.0 the bundle size increased by 3x, from 878KB to 2.65MB.\r\n\r\nEven though in v10.x the UMD bundle was removed (seems likely to be re-added soon via #4281), a minified build I was able to create locally was 2.69MB.\r\n\r\nDoes anyone know what contributed to the tripling in bundle size? It feels quite significant and possibly due to some error in dependency handling.\r\n\r\n(Back of my mind thinking: what new feature addition could have weighed twice the size of v9.3.0!)",
                        "title": "Significant bundle size increase since v9.3.0",
                        "url": "https://github.com/orgs/mermaid-js/discussions/4314"
                    }
                ],
                "pageInfo": {
                    "endCursor": "Y3Vyc29yOnYyOpK5MjAyMy0wNC0xOVQwMzowMjozNSswODowMM4ATd0e"
                }
            }
        }
    }
}